--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,y,y)local y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm=106,47,38,39,47,98,46,87,65,35,86,42,76,26,38,52,61,38,19,73,62,50,29,68,20,53,66,68,79,35,52,95,89,43,74,27,65,57,88,11,91,87,68,37,62,64,56,90,41,14,70,18 while y~=69 do if z>=724 then if z>=1085 then if z<=1182 then if z>=1147 then if z>=1164 then if z>1166 then bk={}z=1225 else cb=function(...)return{...},bn('#',...)end z=1182 end else z=1164 do bt=function(cn,cn,cn,cn,cn)local cn,co,cp,cq=61,53,51,82,46,38,84,69,11,56,92,89,23,28 while cn~=39 do if co<=111 then if co<=53 then co=74 cp,cq=nil else if co<103 then do cp=bz()end co=111 else co=142 cq=by:sub(cm,(cm+cp-1))end end else if co>=157 then if co<169 then co=177 do return cq;end else break end else cm=(cm+cp);co=157 end end end end end end else if z<1122 then cj=function()local cn,co cn,co=br(by,cm,(cm+2))cm=(cm+2);return((co*256)+cn);end z=1125 else bv=function()local cn,co,cp,cq,cr,cs,ct,cu=60,55,50,62,37,28,83,22,70,51,67,28,11,80,91,15,51,75 while cn~=45 do if co>=242 then if co<=292 then if co>=270 then if co<286 then co=292 do cp=(bd(0,cs,20)*4294967296+cq)end else ct=1 co=325 end else co=270 cu=bd(20,cs,11)end else if co>=340 then if co>345 then cn=45;else co=365 return(cr*(2^(cu-1023))*(cp/bu+ct))end else if not(cu~=0)then if not(cp==0)then cu=1 ct=0 else return(cr*0)end elseif not(cu==2047)then else if 0==cp then do return(cr*(0/0))end else do return(cr*(1/0))end end end co=340 end end else if co<=98 then if co>59 then cq=bz()co=141 else co=98 cp,cq,cr,cs,ct,cu=nil end else if co<=141 then co=172 cs=bz()else if co<189 then co=194 if((cq==0 and cs==0))then return 0 end else cr=((-1)^bd(31,cs,1))co=242 end end end end end end z=1147 end end else if z>=1292 then if z<=1292 then z=1313 cf=function(cn,co,cp,cq,cq,cq)local cq,cr,cs,ct,cu cu=ca cq=cn[109]cr=cn[118]cs=cn[59]ct=cn[163]return function(...)local cn,cu,cv,cw,cx,cy,cz,da,db cn=1 do cv=-1 end da=-1 cw={}do cx={...}end cy=(bn('#',...)-1)do db={}end do cu={}end for da=0,cy do if(not(da<cr))then do cw[(da-cr)]=cx[(da+1)];end else cu[da]=cx[(da+1)];end;end;cz=(cy-cr+1)while true do local cz,da,dc,dd,de,df,dg,dh,di,dj cz=ct[cn]de=cz[32]dh=cz[33]di=cz[191]da=cz[55]df=cz[141]do dj=cz[124]end dg=cz[149]dc=cz[15]dd=cz[85]if not(de>44)then do if not(de>i)then if not(de>10)then do if not(de>4)then do if not(de<2)then if not(de<3)then if 3==de then ca[di]=ca[da]else local i,dh,dk dh=cz[191]do dk={cu[dh](bp(cu,dh+1,dc))}end i=0 do for dl=dh,cz[141]do i=(i+1);cu[dl]=dk[i];end end end else for i=di,dc do cu[i]=nil;end;end else if(de>0)then do cu[di][cu[dc]]=cu[df];end else cp=cu[cz[di]]end end end else if not(de>7)then if not(de>5)then local i,dh do i=di end dh=cu[cz[15]]cu[(i+1)]=dh;cu[i]=dh[cu[df]];else if(de<7)then else ct[cn]={[15]=c,[191]=16,[32]=de- -27,[r]=4,[124]=0};do cn=(cn-1);end end end else if not(de>8)then cu[cz[191]][cq[dc]]=cq[df];else if(de>9)then local c,i,r,dh,dk do c=di end do i=df end do dh=(c+2)end dk={cu[c](cu[c+1],cu[dh])}for dl=1,i do do cu[(dh+dl)]=dk[dl]end end r=cu[(c+3)]do if r then cu[dh]=r else do cn=dc;end end;end else do cu[di]=cf(cs[cz[15]],nil,cp);end end end end end end else if not(de>15)then do if not(de>12)then if(cz[32]>11)then if((cu[di]<cu[cz[141]]))then cn=dc;end;else cu[di]=(cu[dc]-cu[df]);end else do if not(cz[32]>13)then do cu[di]=(cu[dc]+cu[df]);end else if not(de~=14)then cu[dd]();else cu={};for c=0,cy do if(c<cr)then cu[c]=cx[(c+1)];else break end;end;end end end end end else if not(de>18)then if not(cz[32]<17)then if(de<18)then cn=((cu[di]<cu[df])and dc or cn)else local c,i,r,cr do c=di end r,cr=cb(cu[c](bp(cu,(c+1),dc)))cv=(cr+c-1)i=0 for cr=c,cv do i=(i+1);cu[cr]=r[i];end;end else cu[di]=(cu[dc]%cq[df]);end else if not(de>19)then do cu[di]=(0~=dc);end cn=(cn+1);else if(de>20)then do cu[di]=co[dc];end else local c do c=di end cu[c]=cu[c](bp(cu,c+l,cv));end end end end end else if not(de>32)then if not(de>26)then do if not(de<24)then if not(de>24)then cu[di]=cp[cq[dc]][cq[df]];else if(de>25)then do while(cu[cz[191]]~=cu[cz[141]])do cn=dc;break end end else if di then cz[t]=false;do df=dc;end do cn=(cn-1);end else cn=(cn+dc+df);end end end else if(cz[32]<23)then if(not(cu[di]<cu[cz[141]]))then cn=dc;end;else cu[di]=cu[cz[15]][cu[df]];end end end else if not(de<30)then if not(de>30)then cu[di]();else do if(de<32)then local c c=di do do return bp(cu,c,(c+cz[j]))end;end else ca=cu end end end else if not(de<28)then if(de>28)then do if not cu[di]then do cn=dc;end end;end else do ca[di]=cu[da]end end else local c,i i=di c=cz[15]for j=i,c do do cu[j]=cw[(j-i)];end end;end end end else if not(cz[32]>38)then if not(de<36)then if not(de<37)then do if(de>37)then local c do c=cu[dg][dj]end cu[cz[149]][dj]=(c..cu[df]);else local c,i do c,i=cb(...)end for i=1,cz[191]do do cu[(i-1)]=c[i]end end end end else ct[cn]=bk[dj];cn=dc;end else if not(de>33)then local c do c={}end if(#db>0)then for i=1,#db do local j j=db[i]for i=0,#j do local l,r,t t=j[i]do l=t[1]end r=t[u]if(l==cu and r>=0)then c[r]=l[r]do t[1]=c end end end end end return cu[(di+1)],cu[di],cz[32];else if not(cz[32]~=34)then cu[di]=cq[dc]else local c,i,j,l j=di c=((df-1)*50)i=cu[j]l=dc for r=1,l do do i[(c+r)]=cu[(j+r)]end end;end end end else do if not(cz[32]<42)then if not(de<43)then if(de<44)then cu[di]=ca[da]elseif((cq[di]<cu[df]))then cn=dc;end else cn=((cq[cz[191]]<cu[df])and dc or cn)end else if not(cz[32]>39)then local c c=di do do return cu[c](bp(cu,(c+1),dc))end;end else if(de<41)then cv=cz[di];else cu[di]=cu[dc][cq[df]];end end end end end end end end else if not(cz[32]<68)then do if not(cz[32]>78)then do if not(de>72)then if not(de<70)then if not(de>70)then if not cu[df]then cu[cz[191]]=cu[df];cn=dc;end;else do if(de<72)then local c,i c=cz[191]i={}if(#db>0)then for j=1,#db do local l l=db[j]for j=0,#l do local r,t,u t=l[j]u=t[1]r=t[2]while u==cu and r>=0 do i[r]=u[r]t[1]=i break end end end end return bp(cu,c,cv);else local c c=di cu[c]=cu[c](bp(cu,c+1,dc));end end end else do if 68==de then cq=ca[di](cq)else cu[di]={};end end end else if not(de>75)then if not(de<74)then if not(de~=74)then do cu[cz[191]]=cp[cq[dc]];end else cu[di]=nil;end else do ca[di]()end end else if not(de>76)then do cn=dc;end else if(de>77)then cu[di]=-cu[dc];else if(not(cu[di]==cq[df]))then do cn=dc;end end;end end end end end else do if not(de<85)then if not(de>87)then do if not(cz[32]>85)then else if(de<87)then do do return cu[dg][dj]end end else local c c=di cu[c]=cu[c](cu[c+1]);end end end else if not(de<b)then if(de>89)then cu[di]=(cu[dc]%cu[df]);else cu[dd]=(function()cu[di]=cf(cs[cz[55]],nil,cp);end)end else local b,c do b=dc end do c=cu[b]end for i=(b+1),df do c=(c..cu[i]);end;cu[di]=c;end end else do if not(de>81)then if not(cz[32]>79)then do if cu[di]then cn=cz[15];end;end else do if 80==de then local b,c c=di b={}do for i=1,#db do local j j=db[i]do for i=0,#j do local l,r,t r=j[i]l=r[1]t=r[2]if(l==cu and t>=c)then do b[t]=l[t];end r[1]=b;end;end;end end;end else cu[di]=(cu[dc]^cu[df]);end end end else if not(de>82)then ca[di]={}else if(de<84)then cu[cz[191]]=cu[cz[15]]else cu[di]=(cu[dc]*cq[df]);end end end end end end end end else if not(de>55)then if not(cz[32]>49)then if not(de<47)then if not(cz[32]>47)then ct[cn]={[191]=27,[15]=0,[124]=0,[32]=de-27,[141]=2};cn=(cn-1);else if(de<49)then cu[di]=(cu[dc]/cq[cz[141]]);else cu[cz[di]]=cu end end else if(de<46)then else ct[cn]=bk[dj];cn=dc;end end else if not(de>52)then if not(de<51)then if 51==de then co[dc]=cu[di];else cu[di]=cu[cz[15]];end else cp[cq[dc]]=cu[di];end else if not(de>53)then do while(cu[cz[191]]>cu[df])do cn=dc;break end end else if 54==cz[32]then local b,c,i b=di i=cu[(b+2)]do c=(cu[b]+i)end cu[b]=c;do if((i>e))then do if(not(c>cu[b+1]))then cn=dc;cu[(b+3)]=c;end end elseif(not(c<cu[b+1]))then do cn=dc;end cu[(b+n)]=c;end end else do do return cu[di]end end end end end end else if not(de<62)then if not(de>64)then do if not(de<63)then if(de>63)then local b,c,e,i b=di c={cu[b]()}i=cz[141]e=0 for j=b,i do e=(e+1);cu[j]=c[e];end else cu[di]=(cu[dc]+cq[cz[141]]);end else cu[di]=(cu[dc]/cu[df]);end end else if not(de<66)then if(de>66)then do cu[dd]=(function()cu[di]=cf(cs[cz[x]],nil,cp);end)end else local b,c,e c=di b=cu[c]e=cu[(c+2)]do if((e>0))then do if((b>cu[c+1]))then cn=dc;else cu[(c+3)]=b;end end elseif((b<cu[c+1]))then cn=dc;else cu[(c+3)]=b;end end end else local b,c b=di c=cu[dc]cu[(b+1)]=c;cu[b]=c[cq[df]];end end else if not(de<59)then if not(de<60)then do if(de<61)then do cu[cz[191]]=(cu[dc]*cu[df]);end else local b,c,e do b=cz[191]end e={cu[b](cu[b+1])}c=0 do for i=b,cz[141]do do c=(c+1);end cu[i]=e[c];end end end end else cu[di]=#cu[cz[15]];end else do if not(cz[32]>56)then cu[di]=ca[da]else if(de<58)then do cu[cz[191]]=(not cu[dc]);end else ct[cn]={[141]=9,[15]=5,[191]=5,[124]=0,[32]=de-17};cn=(cn-1);end end end end end end end end do cn=(cn+g);end end;end;end else if z<1347 then z=1350 return cf(bm(bf()),{},bf())();else y=69;end end else if z<=1225 then bm=function(b,c,c)local c,e,g,i,j,l,n,r=54,46,18,98,54,63,45,78,17,16,18,25,15,80,89,71,10,81,18,95,75,16,20,79,41,55 while c~=41 do if e>=321 then if e>=478 then if e>=555 then if e>=588 then if e<618 then e=623 return r;else c=41;end else r[163]=l;e=588 end else if e<509 then e=511 r[109]=n else e=555 do for c=1,bz()do local t,u,x,y,cn,co=69,66,52,43,50,82,60,64,75,95,99,83,23,88,39,96,56,16,91,34,71,69,18,64,59,11 while t~=38 do if u<=335 then if u>=218 then if u>=271 then if u>=298 then if u>304 then x[87]=y u=377 else u=335 y=bw(co,1,2)end else do cn=bz()end u=298 end else if u>221 then u=271 do co=bz()end else if not(bx()~=1)then for cp=1,bx()do x[160][cp]={bx()==0,bz()}end end u=238 end end else if u<=100 then if u<98 then u=100 x,y,cn,co=nil else x={{},nil}u=145 end else if u>148 then x[160]={};u=218 else u=171 x[33]=bx();end end end else if u<=458 then if u>=417 then if u>422 then do x[141]=bw(co,21,29);end u=504 else x[15]=bw(cn,12,33);u=458 end else if u>385 then x[191]=bw(co,3,11);u=417 else u=394 x[32]=bw(cn,1,11);end end else if u>=560 then if u<=560 then do x[85]=-x[141]end u=580 else if u>583 then t=38;else u=623 l[c]=x;end end else if u<523 then x[124]=bw(co,12,20);u=530 else u=560 do x[149]=-x[191]end end end end end end end end end end else if e>=398 then if e<434 then n={}e=439 else for c=1,g do local t,u,x,y=40,56,34,51,21,31,49,41,80,60,65,89,95,29 while t~=25 do if u<=95 then if u>=77 then if u<92 then u=95 y=bx()else u=117 x=nil end else u=77 x,y=nil end else if u>=152 then if u<188 then u=194 do n[c]=x;end else t=25;end else u=152 do if(4==y)then x=(0~=bx());elseif(not(y~=0))then x=bv();elseif(2==y)then x=bt();elseif(3==y)then x=b[bt()];end;end end end end end e=478 end else if e>330 then g=bz()e=398 else r[59]=j;e=352 end end end else if e>=183 then if e>=254 then if e<294 then e=296 r[118]=bx();else for b=1,bz()do j[b-1]=bm();end e=321 end else if e<202 then e=205 i=bz()else for b=(#bk+1),(#bk+i)do local c,t,u,x,y=66,51,44,33,67,52,85,66,58,92,31,18,35,10,59,13,98,36,77,91,16,45,14 while c~=44 do if t>=321 then if t<=464 then if t<=369 then if t<362 then y[191]=bw(x,3,11);t=369 else y[55]=bw(x,12,20);t=418 end else if t>420 then y[15]=bw(u,12,33);t=513 else y[141]=bw(x,21,29);t=464 end end else if t<=547 then if t>516 then t=569 y[85]=-y[141]else y[149]=-y[191]t=547 end else if t<591 then t=597 bk[b]=y;else c=44;end end end else if t>=192 then if t>=258 then if t>266 then y[32]=bw(u,1,11);t=321 else y[87]=bw(x,1,2);t=282 end else if t>201 then y[124]=bx();t=258 else t=217 u=bz()end end else if t>=116 then if t>119 then do x=bz()end t=192 else t=152 do y[33]=bx();end end else if t>60 then t=116 y={}else u,x,y=nil t=83 end end end end end end e=254 end end else if e<=66 then if e<59 then g,i,j,l,n,r=nil e=66 else l={}e=94 end else if e<133 then e=136 j={}else e=183 r={}end end end end end end z=1261 else if z>1263 then z=1292 ch={}else z=1277 ca={}end end end end else if z<=852 then if z<=750 then if z>732 then z=782 bu=(h^52)else do bc=''end z=750 end else if z>=823 then if z<850 then z=852 cl=2 else for b=1,31 do bj[b]=cl cl=(cl*2)end z=893 end else bj={[0]=1}z=823 end end else if z>=1000 then if z>=1035 then if z>1039 then z=1085 bx=function()local b b=br(by,cm,cm)cm=(cm+1);return b;end else z=1068 bz=function()local b,c,e,g c,e,b,g=br(by,cm,(cm+3))cm=(cm+4);return((g*16777216)+(b*65536)+(e*256)+c);end end else cm=1 z=1035 end else if z>=929 then if z>933 then bw=function(b,c,e,g,g)local g g=((b/2^(c-1))%2^((e-1)-(c-1)+1))return(g-g%1);end z=1000 else z=974 bs=(bit_lib and bit_lib.bxor or function(b,c)b=b%(2^32)c=c%(2^32)local e,g=k,1 while b>0 and c>0 do local h,i=b%16,c%16 e=e+bg[h+1][i+1]*g b=(b-h)/16 c=(c-i)/16 g=g*16 end e=e+b*g+c*g return e end)end else bd=function(b,c,e,g,g)local g,h,i=53,41,30,92,85,95,10,61,30,89,34,53,77,89 while g~=29 do if h<=130 then if h<=41 then h=84 i=nil else if h<121 then do i=nil end h=130 else i=((c/bj[b])%bj[e])h=175 end end else if h>=194 then if h>201 then g=29;else h=211 return i end else h=194 i=(i-i%1)end end end end z=929 end end end end else if z<=346 then if z>=194 then if z<=232 then if z<=194 then do cc=string.rep end z=211 else if z>218 then z=272 bq=table.insert else z=232 cd=table.concat end end else if z>=300 then if z<343 then bf=(getfenv or function()return _ENV end)z=346 else do ba=setmetatable end z=378 end else z=300 bo=math.ldexp end end else if z<=67 then if z>54 then br=string.byte z=107 else ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm=nil z=67 end else if z<=107 then z=131 ci=string.char else if z<169 then z=174 be=string.sub else z=194 do bh=string.gsub end end end end end else if z<=506 then if z>=441 then if z>=471 then if z>476 then bb=math.floor z=553 else z=506 bi=math.abs end else z=471 do cg=(function(b,c,c)if'number'==bl(b)then return true else return false end end)end end else if z>380 then z=441 bl=type else z=399 do bn=select end end end else if z<=608 then if z<=553 then z=573 bp=(unpack or table.unpack)else if z<599 then z=608 ck=tonumber else ce={}z=637 end end else if z>=678 then if z>686 then z=724 bg={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,v,d,2,3,12,p,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,s,0,3,2,5,4,7,6,},{10,11,f,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,o,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,a,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,w,8,9,6,7,4,q,2,3,0,1,},{15,14,m,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil,nil}else z=705 by=bh('','..',function(a,b,b,b,b)return ce[ck(a,16)]end)end else for a=0,255 do ce[a]=ci(a);end z=678 end end end end end end end)(3,89,18,1,0,8,1,2,21,15,0,1,13,3,10,13,5,141,1,191,2,0,11,55)